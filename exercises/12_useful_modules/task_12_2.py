# -*- coding: utf-8 -*-
'''
Задание 12.2


Функция ping_ip_addresses из задания 12.1 принимает только список адресов,
но было бы удобно иметь возможность указывать адреса с помощью диапазона, например, 192.168.100.1-10.

В этом задании необходимо создать функцию convert_ranges_to_ip_list,
которая конвертирует список IP-адресов в разных форматах в список, где каждый IP-адрес указан отдельно.

Функция ожидает как аргумент список IP-адресов и/или диапазонов IP-адресов.

Элементы списка могут быть в формате:
* 10.1.1.1
* 10.1.1.1-10.1.1.10
* 10.1.1.1-10

Если адрес указан в виде диапазона, надо развернуть диапазон в отдельные адреса, включая последний адрес диапазона.
Для упрощения задачи, можно считать, что в диапазоне всегда меняется только последний октет адреса.

Функция возвращает список IP-адресов.


Например, если передать функции convert_ranges_to_ip_list такой список:
['8.8.4.4', '1.1.1.1-3', '172.21.41.128-172.21.41.132']

Функция должна вернуть такой список:
['8.8.4.4', '1.1.1.1', '1.1.1.2', '1.1.1.3', '172.21.41.128',
 '172.21.41.129', '172.21.41.130', '172.21.41.131', '172.21.41.132']

'''
#Решение
import ipaddress as ip
def convert_ranges_to_ip_list(ip_list):
	ans=[]
	for i in ip_list:
		lis = i.replace('-','.').split('.')
		if len(lis)==4:
			ans.append(i)
		elif len(lis)==5:
			ip_ad=ip.ip_address(i[:i.find('-')])
			for n in range(int(lis[4])+1-int(lis[3])):
				ans.append(str(ip.ip_address(int(ip_ad)+n)))
		else:
			ip_adsta=ip.ip_address(i[:i.find('-')])
			ip_adsto=ip.ip_address(i[i.find('-')+1:])
			for n in range(int(ip_adsto)-int(ip_adsta)+1):
				ans.append(str(ip.ip_address(int(ip_adsta)+n)))
	return ans

